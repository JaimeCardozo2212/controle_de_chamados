# auth.py

import streamlit as st
from config import ADMIN_EMAIL, ALLOWED_DOMAIN

def is_admin(email):
    """Verifica se o e-mail √© do administrador."""
    return email.lower() == ADMIN_EMAIL.lower()

def is_valid_email(email):
    """Verifica se o e-mail pertence ao dom√≠nio permitido."""
    return email.lower().endswith(ALLOWED_DOMAIN)

def show_login_form():
    """Mostra o formul√°rio de login e atualiza o estado da sess√£o no sucesso."""
    st.markdown("## üîí Login - Acesso Restrito")
    st.info("Por favor, fa√ßa o login para visualizar o painel e usar o chat.")
    
    email_input = st.text_input("E-mail institucional:", key="login_email")

    if st.button("Entrar", key="login_button"):
        
        # ===== AJUSTE PRINCIPAL AQUI =====
        # Removemos espa√ßos em branco do in√≠cio e do fim do e-mail
        email = email_input.strip()
        
        if is_valid_email(email):
            # Define o estado da sess√£o como logado
            st.session_state.logged_in = True
            st.session_state.user_email = email # Salva o e-mail j√° limpo
            st.session_state.is_admin = is_admin(email)
            st.rerun()
        else:
            st.error("‚ùå E-mail inv√°lido ou n√£o permitido. Verifique se n√£o h√° espa√ßos extras.")

def logout():
    """Realiza o logout do usu√°rio limpando o estado da sess√£o."""
    st.session_state.logged_in = False
    st.session_state.user_email = ""
    st.session_state.is_admin = False
    st.rerun()